version: '3.9'

services:
  backend:
    image: backend-dev
    build:
      context: ./backend
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py createsu &&
            #  python manage.py runscript load --script-args 0 10 &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend/app:/backend/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=1
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
      - DJANGO_SU_NAME=${DJANGO_SU_NAME}
      - DJANGO_SU_EMAIL=${DJANGO_SU_EMAIL}
      - DJANGO_SU_PASSWORD=${DJANGO_SU_PASSWORD}
    ports:
      - "8000:8000"
    depends_on:
      - db
      - chromadb
    networks:
      - internal-net

  frontend:
    image: frontend-dev
    build:
      context: ./nginx/frontend
    environment:
      - BACKEND_URL=http://backend:8000
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - internal-net

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - internal-net
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - chroma_data:/index_data 
    ports:
      - '8989:8989'
    networks:
      - internal-net
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8989"]
        interval: 30s
        timeout: 10s
        retries: 5

networks:
  internal-net:

volumes:
  chroma_data: 
  postgres-data:
