version: "3.9"

services:
  backend:
    image: backend
    build:
      context: ./backend
    restart: always
    volumes:
      - ./static/:/vol/web/static
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DJANGO_SU_NAME=${DJANGO_SU_NAME}
      - DJANGO_SU_EMAIL=${DJANGO_SU_EMAIL}
      - DJANGO_SU_PASSWORD=${DJANGO_SU_PASSWORD}
    depends_on:
      - db
    networks:
      - internal-net

  frontend:
    image: frontend
    build:
      context: ./frontend
    restart: always
    volumes:
      - ./static/:/vol/web/static
    environment:
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - internal-net

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - ./database/postgres/:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - internal-net

  proxy:
    image: proxy
    build:
      context: ./proxy
    restart: always
    volumes:
      - ./static/:/vol/web/static
    depends_on:
      - frontend
    ports:
      - "80:8000"
    networks:
      - internal-net
      
networks:
  internal-net:
