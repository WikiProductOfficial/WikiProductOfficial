version: "3.9"

services:

  nginx:
      image: nginx
      build:
        context: .  # This sets the build context to the current directory, including frontend and nginx
        dockerfile: nginx/Dockerfile
      ports:
        - "80:8080"
      restart: always
      volumes:
        - static-data:/vol/static
        - frontend_builds:/usr/share/nginx/html
      networks:
        - frontend

  backend:
    image: backend
    build:
      context: ./backend
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DJANGO_SU_NAME=${DJANGO_SU_NAME}
      - DJANGO_SU_EMAIL=${DJANGO_SU_EMAIL}
      - DJANGO_SU_PASSWORD=${DJANGO_SU_PASSWORD}
    depends_on:
      - db
    networks:
      - frontend
      - backend

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - backend

networks:
  frontend:
  backend:

volumes:
  postgres-data:
  static-data:
  frontend_builds: