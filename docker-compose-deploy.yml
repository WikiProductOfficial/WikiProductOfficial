version: "3.9"

services:

  frontend:
      image: nginx
      container_name: frontend
      build:
        context: ./nginx
      ports:
        - "80:80"
      restart: always
      volumes:
        - static-data:/vol/static
      depends_on:
        - backend
      networks:
        - frontend
      links:
        - backend:backend
      

  backend:
    image: backend
    container_name: backend
    build:
      context: ./backend
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DEPLOY_URL=${DEPLOY_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
      - DJANGO_SU_NAME=${DJANGO_SU_NAME}
      - DJANGO_SU_EMAIL=${DJANGO_SU_EMAIL}
      - DJANGO_SU_PASSWORD=${DJANGO_SU_PASSWORD}
      - CHROMA_HOST_PORT=${CHROMA_HOST_PORT}
      - CHROMA_HOST_NAME=${CHROMA_HOST_NAME}
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
      - CHROMA_CLIENT_AUTHN_PROVIDER=${CHROMA_CLIENT_AUTHN_PROVIDER}
      - CHROMA_AUTH_TOKEN_TRANSPORT_HEADER=${CHROMA_AUTH_TOKEN_TRANSPORT_HEADER}
      - EMBEDDING_OPTION=${EMBEDDING_OPTION}
      - EMBEDDING_MODEL_NAME=${EMBEDDING_MODEL_NAME}
      - EMBEDDING_SERVICE=${EMBEDDING_SERVICE}
      - HUGGING_FACE_API_KEY=${HUGGING_FACE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DOWNLOAD_URL=${DOWNLOAD_URL}
      - LOAD_START=${LOAD_START}
      - LOAD_END=${LOAD_END}
    depends_on:
      - db
      - chromadb
    networks:
      - frontend
      - backend

  db:
    image: postgres:13-alpine
    container_name: database
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - backend
  
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chromadb
    restart: always
    volumes:
      - chroma-data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
      - CHROMA_HOST_PORT=${CHROMA_HOST_PORT}
      - CHROMA_TIMEOUT_KEEP_ALIVE=${CHROMA_TIMEOUT_KEEP_ALIVE}
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
      - CHROMA_SERVER_AUTHN_PROVIDER=${CHROMA_SERVER_AUTHN_PROVIDER}
      - CHROMA_AUTH_TOKEN_TRANSPORT_HEADER=${CHROMA_AUTH_TOKEN_TRANSPORT_HEADER}
    networks:
      - backend

networks:
  frontend:
  backend:

volumes:
  postgres-data:
  static-data:
  chroma-data:
    driver: local